//first we get the document
let section = document.getElementsByTagName("section")[0];

//now we get the output sections and place them in an array
let outputs = [
  document.getElementById("output1"),
  document.getElementById("output2"),
  document.getElementById("output3"),
  document.getElementById("output4"),
  document.getElementById("output5")
];

//This will be the starting positon for our 5 outputs and we can incrememnt this by 5
let outputIndex = 0;

//for IDs we will simply iterate upwards for each new event created
let eventID = 1;
//events that will be generated by the loop will be stored in an array of Json objects
let eventJsonObjects = [];


//now we call the Grid generator to start our application
generateGrid(eventJsonObjects);

//==========================================Grid GENERATOR==========================================\\
function generateGrid(eventJsonObjects){
  //Our grid will be generated using for loops
  for(let x = -10; x<=10; x++){
    for(let y = -10; y<=10; y++){
      //Now we decide if an event will be generated.
      //We will make the assumption that there is a 1 in 10 chance of an event generating
      let generateson1 = Math.floor(Math.random() * (10 - 1 + 1)) + 1;
      if(generateson1 == 1)
        {
          //checks that the event has generated
          //console.log("Generated an event: " + generateson1)

          //we call the event generator and append this to our Array of Events
          eventJsonObjects.push(eventGenerator(x,y));
          //------------------------NOTE-----------------------------//
          //To make two or more events generate we could simply have this function run twice and there is a chance two events will share a co-ord.

        }//end if
    }//end for Y
  }//end for X
}//end Function

//==========================================Event GENERATOR==========================================\\
function eventGenerator(x, y){
  //first we need to generate an array of Tickets for this event
  let ticketJsonObjects = [];
  //------------------------NOTE-----------------------------\\
  //We are going to assume that the venues can hold up to 500 people. To change this we just need to make a definable variable for max.
  let randomTicketNumber = Math.floor(Math.random() * (500 - 0 +1)+0);//Max being 1000 and Min being 0

  //Each ticket will have an ID number similar to the events we can just use i for this
  for(let i = 0; i < randomTicketNumber; i++){
    //Now we can generate our tickets and append them to the list as we have done before.
    ticketJsonObjects.push(ticketGenerator(i));
  }
  //Now we make our event object and increment the ID
  event= { "id":eventID, "x":x, "y":y, "tickets":ticketJsonObjects, "distance":0};
  //console.log("Event Generated: " + event.id + " : " +event.tickets[0].price);
  //Now we increment the ID
  eventID = eventID+1;
  return(event);

}//end Function

//==========================================Ticket GENERATOR==========================================\\
function ticketGenerator(id){
  //now we just need a random price
  //------------------------NOTE-----------------------------\\
  //We will assume that prices will not exceed $500 as before this can be changed easily and if we wanted we could make the max value random and then scale towards it.
  let price = (Math.random()*(500)).toFixed(2);
  ticket={"id":id, "price":price};
  //Now we can return the JSON object ticket to our array
  //console.log("Returned Ticket: " + ticket.id + " $"+ticket.price);
  return ticket;
}//end Function

//==========================================Event SEARCH==========================================\\
function eventSearch(x,y){
  console.log("In Event Search");
  //Here we need to implement the Manhattan path from our Event X, Y to our current x,y
  let distance = 0;
  //Now we calculate the distance for each value in Events between this current X,Y
  for(let i =0; i < eventJsonObjects.length; i++)
    {
      //Now we need the X,Y of the event and we can calculate the distance
      distance = Math.abs(eventJsonObjects[i].x - x) + Math.abs(eventJsonObjects[i].y-y);

      eventJsonObjects[i].distance = distance;
    }// End for I
  //Once it has run through these values we will have all the requirements we need so we simply sort by distance
  eventJsonObjects.sort(function(a, b)
                        {
    return a.distance - b.distance;
  });
}//end Function

//==========================================Ticket SEARCH==========================================\\
function cheapestTicketSearch(event){
  console.log("In ticket Search: " + event.id);

  let cheapest = Number.MAX_SAFE_INTEGER;
  cheapestTicket = {"id":null, "price":0};
  for(let i =0; i< event.tickets.length; i++){
    if(event.tickets[i].price < cheapest){
      cheapestTicket = event.tickets[i];
    }//End If
  }//End For i
  //Now we return our cheapest ticket
  return cheapestTicket;
}//end Function

//==========================================Display 5 SEARCH==========================================\\
function displayEvents(outputIndex)
{
  console.log("In Display Events");
  for(let i =0; i+outputIndex <= outputIndex+4; i++)
    {
      outputs[i].innerHTML = i;
      let cheapTicket = cheapestTicketSearch(eventJsonObjects[i+outputIndex]);

      outputs[i].innerHTML = "Event :"+ eventJsonObjects[i+outputIndex].id + " Distance : " + eventJsonObjects[i+outputIndex].distance + "<br> " + "Cheapest Ticket : " +cheapTicket.id + " Price : $" + cheapTicket.price;
      document.getElementById(outputs[i].id).innerHTML = outputs[i].innerHTML;
    }//End for I
}


//==========================================Button Click Event listeners==========================================\\

//Now we can add the event listener!
document.addEventListener('click', function (clicked)
{
    console.log("I'm Being clicked!");
    var target = event.target || event.srcElement;
    var id = target.id;
    console.log(target.id);
    if(target.id == 'submit_co-ords')
      {
        eventSearch(document.getElementById("x").value, document.getElementById("y").value);
        displayEvents(outputIndex);
      }
  else if(target.id == 'next_5')
    {
      if(outputIndex+5> eventJsonObjects.length)
        {
          //Here is a catcher simply to stop the user going to far backward
          console.log("Cannot display past EventJsonObjects");
        }
      else
        {
          outputIndex = outputIndex+5;
          displayEvents(outputIndex);
        }
    }
  else if(target.id =='last_5')
    {
      if(outputIndex == 0)
      {
        //Here is a catcher to stop going below 0
        console.log("Cannot display below 0")
      }
      else{
        outputIndex = outputIndex-5;
        displayEvents(outputIndex);
      }
    }
});
